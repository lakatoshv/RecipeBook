var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
System.register("ngx-paginator/Paginator", ["@angular/core"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var core_1, Paginator;
    return {
        setters: [
            function (core_1_1) {
                core_1 = core_1_1;
            }
        ],
        execute: function () {
            Paginator = (function () {
                function Paginator() {
                    // -------------------------------------------------------------------------
                    // Inputs / Outputs
                    // -------------------------------------------------------------------------
                    this.currentPage = 1;
                    this.hideOnSinglePage = true;
                    this.boundaryLinks = false;
                    this.directionLinks = true;
                    this.boundaryFirstLabel = "First";
                    this.boundaryLastLabel = "Last";
                    this.directionNextLabel = "»";
                    this.directionPreviousLabel = "«";
                    this.onChange = new core_1.EventEmitter();
                }
                // -------------------------------------------------------------------------
                // Public Methods
                // -------------------------------------------------------------------------
                Paginator.prototype.changePage = function (page) {
                    if (page < 1 || page > this.getTotalPagesCount())
                        return;
                    this.currentPage = page;
                    this.onChange.emit(page);
                };
                Paginator.prototype.getPages = function () {
                    var pages = [];
                    var startFrom = 1;
                    var totalPagesCount = this.getTotalPagesCount();
                    var endWith = totalPagesCount;
                    if (this.maxVisible) {
                        startFrom = Math.max(this.currentPage - Math.floor(this.maxVisible / 2), 1);
                        endWith = startFrom + this.maxVisible - 1;
                        if (endWith > totalPagesCount) {
                            endWith = totalPagesCount;
                            startFrom = endWith - this.maxVisible + 1;
                        }
                        if (startFrom < 1)
                            startFrom = 1;
                    }
                    for (var i = startFrom; i <= endWith; i++) {
                        pages.push(i);
                    }
                    return pages;
                };
                Paginator.prototype.getTotalPagesCount = function () {
                    return Math.ceil(this.total / this.onPage);
                };
                return Paginator;
            }());
            __decorate([
                core_1.Input(),
                __metadata("design:type", Number)
            ], Paginator.prototype, "total", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Number)
            ], Paginator.prototype, "onPage", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Number)
            ], Paginator.prototype, "currentPage", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Number)
            ], Paginator.prototype, "maxVisible", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Boolean)
            ], Paginator.prototype, "hideOnSinglePage", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Boolean)
            ], Paginator.prototype, "boundaryLinks", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Boolean)
            ], Paginator.prototype, "directionLinks", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Object)
            ], Paginator.prototype, "boundaryFirstLabel", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Object)
            ], Paginator.prototype, "boundaryLastLabel", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Object)
            ], Paginator.prototype, "directionNextLabel", void 0);
            __decorate([
                core_1.Input(),
                __metadata("design:type", Object)
            ], Paginator.prototype, "directionPreviousLabel", void 0);
            __decorate([
                core_1.Output(),
                __metadata("design:type", Object)
            ], Paginator.prototype, "onChange", void 0);
            Paginator = __decorate([
                core_1.Component({
                    selector: "paginator",
                    template: "\n<nav class=\"paginator\" [class.hidden]=\"hideOnSinglePage && getPages().length <= 1\">\n    <ul class=\"pagination\">\n        <li [ngClass]=\"{ hidden: !boundaryLinks, disabled: currentPage === 1 }\">\n            <a (click)=\"changePage(1)\" [attr.aria-label]=\"boundaryFirstLabel\">{{ boundaryFirstLabel }}</a>\n        </li>\n        <li [ngClass]=\"{ hidden: !directionLinks, disabled: currentPage === 1 }\">\n            <a (click)=\"changePage(currentPage - 1)\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">{{ directionPreviousLabel }}</span>\n            </a>\n        </li>\n        <li *ngFor=\"let page of getPages()\" [ngClass]=\"{ active: currentPage === page }\">\n            <a (click)=\"changePage(page)\">{{ page }}</a>\n        </li>\n        <li [ngClass]=\"{ hidden: !directionLinks, disabled: currentPage === getTotalPagesCount() }\">\n            <a (click)=\"changePage(currentPage + 1)\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">{{ directionNextLabel }}</span>\n            </a>\n        </li>\n        <li [ngClass]=\"{ hidden: !boundaryLinks, disabled: currentPage === getTotalPagesCount() }\">\n            <a (click)=\"changePage(getTotalPagesCount())\" [attr.aria-label]=\"boundaryLastLabel\">{{ boundaryLastLabel }}</a>\n        </li>\n    </ul>\n</nav>\n", styles: ["\nnav.paginator ul.pagination li {\n    cursor: pointer;\n   -moz-user-select: none;\n   -khtml-user-select: none;\n   -webkit-user-select: none;\n   -ms-user-select: none;\n   user-select: none;\n}\nnav.paginator ul.pagination .hidden {\n    display: none;\n}\n"]
                })
            ], Paginator);
            exports_1("Paginator", Paginator);
        }
    };
});
System.register("ngx-paginator/RoutePaginator", ["@angular/core", "ngx-paginator/Paginator", "@angular/router"], function (exports_2, context_2) {
    "use strict";
    var __moduleName = context_2 && context_2.id;
    var core_2, Paginator_1, router_1, RoutePaginator;
    return {
        setters: [
            function (core_2_1) {
                core_2 = core_2_1;
            },
            function (Paginator_1_1) {
                Paginator_1 = Paginator_1_1;
            },
            function (router_1_1) {
                router_1 = router_1_1;
            }
        ],
        execute: function () {
            RoutePaginator = (function () {
                // -------------------------------------------------------------------------
                // Constructor
                // -------------------------------------------------------------------------
                function RoutePaginator(activatedRoute, router) {
                    this.activatedRoute = activatedRoute;
                    this.router = router;
                    this.hideOnSinglePage = true;
                    this.boundaryLinks = false;
                    this.directionLinks = true;
                    this.boundaryFirstLabel = "First";
                    this.boundaryLastLabel = "Last";
                    this.directionNextLabel = "»";
                    this.directionPreviousLabel = "«";
                    this.onChange = new core_2.EventEmitter();
                }
                // -------------------------------------------------------------------------
                // Lifecycle callbacks
                // -------------------------------------------------------------------------
                RoutePaginator.prototype.ngOnInit = function () {
                    var _this = this;
                    if (this.queryParam) {
                        this.paramsSubscription = this.activatedRoute.queryParams.subscribe(function (params) {
                            var page = 1;
                            if (params[_this.queryParam]) {
                                page = parseInt(params[_this.queryParam]);
                                if (page < 1 || page > _this.paginator.getTotalPagesCount())
                                    page = 1;
                            }
                            setTimeout(function () { return _this.paginator.currentPage = page; });
                        });
                    }
                    else if (this.param) {
                        this.paramsSubscription = this.activatedRoute.params.subscribe(function (params) {
                            var page = 1;
                            if (params[_this.param]) {
                                page = parseInt(params[_this.param]);
                                if (page < 1 || page > _this.paginator.getTotalPagesCount())
                                    page = 1;
                            }
                            setTimeout(function () { return _this.paginator.currentPage = page; });
                        });
                    }
                };
                RoutePaginator.prototype.ngOnDestroy = function () {
                    if (this.paramsSubscription)
                        this.paramsSubscription.unsubscribe();
                };
                // -------------------------------------------------------------------------
                // Public Methods
                // -------------------------------------------------------------------------
                RoutePaginator.prototype.changePage = function (page) {
                    if (this.param) {
                        var params = Object.assign({}, this.activatedRoute.snapshot.params);
                        params[this.param] = page;
                        var extras = {
                            fragment: this.activatedRoute.snapshot.fragment,
                            queryParams: this.activatedRoute.snapshot.queryParams,
                        };
                        this.router.navigate([params], extras);
                    }
                    else if (this.queryParam) {
                        var extras = {
                            fragment: this.activatedRoute.snapshot.fragment,
                            queryParams: Object.assign({}, this.activatedRoute.snapshot.queryParams),
                            relativeTo: this.activatedRoute,
                        };
                        extras.queryParams[this.queryParam] = page;
                        this.router.navigate([], extras);
                    }
                    this.onChange.emit(page);
                };
                return RoutePaginator;
            }());
            __decorate([
                core_2.Input(),
                __metadata("design:type", String)
            ], RoutePaginator.prototype, "param", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", String)
            ], RoutePaginator.prototype, "queryParam", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Number)
            ], RoutePaginator.prototype, "total", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Number)
            ], RoutePaginator.prototype, "onPage", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Number)
            ], RoutePaginator.prototype, "maxVisible", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Boolean)
            ], RoutePaginator.prototype, "hideOnSinglePage", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Boolean)
            ], RoutePaginator.prototype, "boundaryLinks", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Boolean)
            ], RoutePaginator.prototype, "directionLinks", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Object)
            ], RoutePaginator.prototype, "boundaryFirstLabel", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Object)
            ], RoutePaginator.prototype, "boundaryLastLabel", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Object)
            ], RoutePaginator.prototype, "directionNextLabel", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Object)
            ], RoutePaginator.prototype, "directionPreviousLabel", void 0);
            __decorate([
                core_2.Output(),
                __metadata("design:type", Object)
            ], RoutePaginator.prototype, "onChange", void 0);
            __decorate([
                core_2.ViewChild(Paginator_1.Paginator),
                __metadata("design:type", Paginator_1.Paginator)
            ], RoutePaginator.prototype, "paginator", void 0);
            RoutePaginator = __decorate([
                core_2.Component({
                    selector: "route-paginator",
                    template: "\n<div class=\"route-paginator\">\n    <paginator  [total]=\"total\" \n                [onPage]=\"onPage\" \n                [maxVisible]=\"maxVisible\" \n                [hideOnSinglePage]=\"hideOnSinglePage\" \n                [boundaryLinks]=\"boundaryLinks\" \n                [directionLinks]=\"directionLinks\" \n                [boundaryFirstLabel]=\"boundaryFirstLabel\" \n                [boundaryLastLabel]=\"boundaryLastLabel\" \n                [directionNextLabel]=\"directionNextLabel\" \n                [directionPreviousLabel]=\"directionPreviousLabel\" \n                (onChange)=\"changePage($event)\"></paginator>\n</div>\n"
                }),
                __metadata("design:paramtypes", [router_1.ActivatedRoute,
                    router_1.Router])
            ], RoutePaginator);
            exports_2("RoutePaginator", RoutePaginator);
        }
    };
});
System.register("ngx-paginator/index", ["ngx-paginator/Paginator", "ngx-paginator/RoutePaginator", "@angular/common", "@angular/core"], function (exports_3, context_3) {
    "use strict";
    var __moduleName = context_3 && context_3.id;
    var Paginator_2, RoutePaginator_1, common_1, core_3, PaginatorModule;
    var exportedNames_1 = {
        "PaginatorModule": true
    };
    function exportStar_1(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default" && !exportedNames_1.hasOwnProperty(n)) exports[n] = m[n];
        }
        exports_3(exports);
    }
    return {
        setters: [
            function (Paginator_2_1) {
                Paginator_2 = Paginator_2_1;
                exportStar_1(Paginator_2_1);
            },
            function (RoutePaginator_1_1) {
                RoutePaginator_1 = RoutePaginator_1_1;
                exportStar_1(RoutePaginator_1_1);
            },
            function (common_1_1) {
                common_1 = common_1_1;
            },
            function (core_3_1) {
                core_3 = core_3_1;
            }
        ],
        execute: function () {
            PaginatorModule = (function () {
                function PaginatorModule() {
                }
                return PaginatorModule;
            }());
            PaginatorModule = __decorate([
                core_3.NgModule({
                    imports: [
                        common_1.CommonModule
                    ],
                    declarations: [
                        Paginator_2.Paginator,
                        RoutePaginator_1.RoutePaginator,
                    ],
                    exports: [
                        Paginator_2.Paginator,
                        RoutePaginator_1.RoutePaginator,
                    ],
                })
            ], PaginatorModule);
            exports_3("PaginatorModule", PaginatorModule);
        }
    };
});
System.register("ngx-paginator", ["ngx-paginator/index"], function (exports_4, context_4) {
    "use strict";
    var __moduleName = context_4 && context_4.id;
    function exportStar_2(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_4(exports);
    }
    return {
        setters: [
            function (index_1_1) {
                exportStar_2(index_1_1);
            }
        ],
        execute: function () {
        }
    };
});

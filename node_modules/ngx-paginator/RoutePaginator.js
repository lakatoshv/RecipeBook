"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var Paginator_1 = require("./Paginator");
var router_1 = require("@angular/router");
var RoutePaginator = (function () {
    // -------------------------------------------------------------------------
    // Constructor
    // -------------------------------------------------------------------------
    function RoutePaginator(activatedRoute, router) {
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.hideOnSinglePage = true;
        this.boundaryLinks = false;
        this.directionLinks = true;
        this.boundaryFirstLabel = "First";
        this.boundaryLastLabel = "Last";
        this.directionNextLabel = "»";
        this.directionPreviousLabel = "«";
        this.onChange = new core_1.EventEmitter();
    }
    // -------------------------------------------------------------------------
    // Lifecycle callbacks
    // -------------------------------------------------------------------------
    RoutePaginator.prototype.ngOnInit = function () {
        var _this = this;
        if (this.queryParam) {
            this.paramsSubscription = this.activatedRoute.queryParams.subscribe(function (params) {
                var page = 1;
                if (params[_this.queryParam]) {
                    page = parseInt(params[_this.queryParam]);
                    if (page < 1 || page > _this.paginator.getTotalPagesCount())
                        page = 1;
                }
                setTimeout(function () { return _this.paginator.currentPage = page; });
            });
        }
        else if (this.param) {
            this.paramsSubscription = this.activatedRoute.params.subscribe(function (params) {
                var page = 1;
                if (params[_this.param]) {
                    page = parseInt(params[_this.param]);
                    if (page < 1 || page > _this.paginator.getTotalPagesCount())
                        page = 1;
                }
                setTimeout(function () { return _this.paginator.currentPage = page; });
            });
        }
    };
    RoutePaginator.prototype.ngOnDestroy = function () {
        if (this.paramsSubscription)
            this.paramsSubscription.unsubscribe();
    };
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    RoutePaginator.prototype.changePage = function (page) {
        if (this.param) {
            var params = Object.assign({}, this.activatedRoute.snapshot.params);
            params[this.param] = page;
            var extras = {
                fragment: this.activatedRoute.snapshot.fragment,
                queryParams: this.activatedRoute.snapshot.queryParams,
            };
            this.router.navigate([params], extras);
        }
        else if (this.queryParam) {
            var extras = {
                fragment: this.activatedRoute.snapshot.fragment,
                queryParams: Object.assign({}, this.activatedRoute.snapshot.queryParams),
                relativeTo: this.activatedRoute,
            };
            extras.queryParams[this.queryParam] = page;
            this.router.navigate([], extras);
        }
        this.onChange.emit(page);
    };
    return RoutePaginator;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RoutePaginator.prototype, "param", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RoutePaginator.prototype, "queryParam", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RoutePaginator.prototype, "total", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RoutePaginator.prototype, "onPage", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RoutePaginator.prototype, "maxVisible", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], RoutePaginator.prototype, "hideOnSinglePage", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], RoutePaginator.prototype, "boundaryLinks", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], RoutePaginator.prototype, "directionLinks", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RoutePaginator.prototype, "boundaryFirstLabel", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RoutePaginator.prototype, "boundaryLastLabel", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RoutePaginator.prototype, "directionNextLabel", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RoutePaginator.prototype, "directionPreviousLabel", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], RoutePaginator.prototype, "onChange", void 0);
__decorate([
    core_1.ViewChild(Paginator_1.Paginator),
    __metadata("design:type", Paginator_1.Paginator)
], RoutePaginator.prototype, "paginator", void 0);
RoutePaginator = __decorate([
    core_1.Component({
        selector: "route-paginator",
        template: "\n<div class=\"route-paginator\">\n    <paginator  [total]=\"total\" \n                [onPage]=\"onPage\" \n                [maxVisible]=\"maxVisible\" \n                [hideOnSinglePage]=\"hideOnSinglePage\" \n                [boundaryLinks]=\"boundaryLinks\" \n                [directionLinks]=\"directionLinks\" \n                [boundaryFirstLabel]=\"boundaryFirstLabel\" \n                [boundaryLastLabel]=\"boundaryLastLabel\" \n                [directionNextLabel]=\"directionNextLabel\" \n                [directionPreviousLabel]=\"directionPreviousLabel\" \n                (onChange)=\"changePage($event)\"></paginator>\n</div>\n"
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        router_1.Router])
], RoutePaginator);
exports.RoutePaginator = RoutePaginator;
//# sourceMappingURL=RoutePaginator.js.map